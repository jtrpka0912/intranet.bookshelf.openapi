openapi: "3.0.0"
info:
  title: "Intranet Bookshelf API"
  description: "REST API communication between the front-end (React) to back-end (NodeJS)."
  contact:
    name: "J. Trpka"
    url: "https://www.github.com/jtrpka0912"
    email: "jtrpka0912@gmail.com"
  version: "1.0.0"
servers:
  - url: "http://localhost:3001/api/v1"
    description: "Development Server"
components:
  examples:
    Book:
      summary: eBook Book Example
      description: A simple example of an ebook Book example.
      value:
        id: 4
        type: book
        name: Journey to the West
        path: /path/to/ebook/journey-to-the-west.pdf
        cover: /path/to/images/cover/journey-to-the-west.jpg
        didRead: false
        author: Unknown
    Magazine:
      summary: eBook Magazine Example
      description: A simple example of an ebook Magazine example.
      value:
        id: 19
        type: magazine
        name: Magpi
        path: /path/to/magazines/magpi/issue014.pdf
        cover: /path/to/images/cover/magpi-issue014.jpg
        didRead: false
        issue: 14
  schemas:
    Book:
      allOf:
      - $ref: '#/components/schemas/File'
      - description: Data representing an ebook Book inside the bookshelf.
      - type: object
        example: 
          $ref: '#/components/examples/Book'
        properties:
          author:
            type: string
            description: The author of the ebook book.
    File:
      type: object
      description: Data representing an ebook inside the bookshelf.
      example:
        $ref: '#/components/examples/File'
      properties:
        id:
          type: integer
          description: The primary key.
          minimum: 1
        type:
          type: string
          description: Is this a book, magazine, or comic book?
          enum:
          - book
          - magazine
          - comicbook
        name:
          type: string
          description: Name of the ebook.
        path:
          type: string
          description: Path to the ebook in the NAS.
        cover:
          type: string
          description: Path to the image, created in backend, of the ebook.
        didRead:
          type: boolean
          description: Did the user read the ebook.
      required:
        - id
        - type
        - name
        - path
    Files:
      type: array
      description: An array of ebook files.
      items:
        $ref: '#/components/schemas/File'
    Folder:
      type: object
      description: Data representing a directory inside the bookshelf.
      properties:
        id:
          type: integer
          description: The primary key.
          minimum: 1
        name:
          type: string
          description: Name of the directory; for example, a publisher or genre name.
        path:
          type: string
          description: Path to the directory in the NAS.
    Folders:
      type: array
      description: An array of directories.
      items:
        $ref: '#/components/schemas/Folder'
    Magazine:
      allOf:
        - $ref: '#/components/schemas/File'
        - description: Data representing an ebook Magazine inside the bookshelf.
        - type: object
          example: 
            $ref: '#/components/examples/Book'
          properties:
            issue:
              type: integer
              description: The issue number of the ebook magazine.
  